
http://localhost:8080/


//****************************
<template>
<div>
   <input v-model="text"/>
  
   <button @click="title=text">set</button> 
   <button @click="title=''">clear</button> 
  
   <h1>{{title}}</h1>
   
</div>
</template>

<script> 
  export default{
     data() {        
       return { 
        text: "",
        title: "",
       };
     },
   }; 
</script>


//****************************
<template>
<div>
      
   <button @click="add">Add</button> 
<ul>
  <li v-for="text in list" :key="text">
      {{text}}
 </li>
</ul>   
</div>
</template>

<script> 
  export default{
    data:() =>({
        list : [1,2,3],
      }),  
   methods: { 
       add() { 
         this.list.push(this.list.length + 1 );
        }, 
  }, 
}; 
</script>


//****************************
<template>
<div>
      
   <button @click="add">Add</button> 
<ul>
  <li v-for="text in list" :key="text">
      {{text}}
  </li>
</ul>   
</div>
</template>

<script> 
  export default{
    data:() =>({
        list : [1,2,3],
      }),  
   methods: { 
       add() { 
         this.list = this.list.map((n) => n*2);
        }, 
         },  
};
</script>

//===========================================================

<template>
  <div>
    <input v-model="text" />
    <button @click="add"  :disabled="!text">Add
        </button>
    {{ text }}
    <ul>
      <li v-for="item in list" 
      :key="item.text"    

      >
      <input type="checkbox"
      v-mode="item.done"
      />
           {{ item.text }}
      </li>
    </ul>
   <pre>
       {{JSON.stringify(list, null, 2)}}
   </pre>
  </div>
</template>

<script>
export default {
  data: () => ({
    text: "",
    list: [],
  }),
 methods: {
    add() {
      if(!this.text) return;
      const item ={
          text: this.text,
          done: false,
      };
      this.list.push(item);
      this.text = "";
      },
      

   },
};
</script>
<style scoped>
</style>

//======================
<template>
  <div>
     
    <input v-model="text" />
    <button @click="add" :disabled="!text">Add </button>
    <br/>
    <h2 :class="{red: invalid }">
         {{textLength}}
         </h2>
    <ul id="list">
      <li
      :class="{grey: item.done}"   
        v-for="item in list" 
      :key="item.text" 
      >
      <input type="checkbox"
      v-mode="item.done"
      />
           {{ item.text }}
      </li>
    </ul>

  </div>
</template>

<script>
export default {
  data: () => ({
    text: "",
    list: [],
  }),
computed:{
    textLength()
{ return this.text.length;
},
invalid(){
    //invalid()
   return this.text.length <=0||this.text.length > 10;
}
},

 methods: {
    add() {
      if(!this.invalid) return;
     // if(this.isRed) return;
      const item ={
          text: this.text,
          done: false,
      };
      this.list.push(item);
      this.text = "";
      },   
   },
};
</script>

<style scoped>
.grey {
    color: #ddd;
}
.red {
     color: red;
 }
</style>

//======================
<template>
<div>
  {{cityCode}}

  <select v-model="cityCode">
      <option v-for="city in cities" 
      :key="city.code" 
      :value="city.code">
     
           {{city.name}}
      </option>
      </select>  

  <select v-model="regionCode">
      <option v-for="region in regions" 
      :key="region.code" 
      :value="region.code">
     
           <h1>{{region.name}}</h1>
      </option>
      </select> 

 <pre>
      {{JSON.stringify(zip, null, 2)}}
 </pre>
</div>
</template>

<script> 
import zip from '../zip.json';
export default {
     data: () => ({        
      zip, 
      cityCode: 100,      
     }),
computed:{
    cities() {
        return this.zip.cities;
    },
    regions() {
        return [];
    },
},
}; 
</script>



